setwd("C:/Users/tswanson/animl")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::use_vignette("introduction")
usethis::use_vignette("Getting Started")
usethis::use_vignette("Introduction")
install.packages("xfun")
install.packages("xfun")
library(exifr)
library(dplyr)
library(stringi)
library(jpeg)
library(imager)
library(data.table)
library(jsonlite)
library(reticulate)
use_condaenv("mlgpu")
#-------------------------------------------------------------------------------
# Setup
#-------------------------------------------------------------------------------
setwd("/mnt/machinelearning/orbweaver")
source("MegaDetectorFunctions.R")
usethis::use_vignette("Introduction")
datadir <- "\\10.24.17.135\\Projects\\Stacy-Dawes_Kenya\\Working Directory\\Data\\"
imagefile <- "Jan2020_Results"
# load point
images<-read.csv(file=paste0(datadir,imagefile),stringsAsFactors = F)
imagefile <- "Jan2020_Results.csv"
# load point
images<-read.csv(file=paste0(datadir,imagefile),stringsAsFactors = F)
datadir <- "\\\\10.24.17.135\\Projects\\Stacy-Dawes_Kenya\\Working Directory\\Data\\"
# load point
images<-read.csv(file=paste0(datadir,imagefile),stringsAsFactors = F)
View(images)
mdresults<-"Jan2020_mdres.RData"
load(file = mdresults)
load(file = paste0(datadir,mdresults))
View(results)
View(results)
setwd("//10.24.17.135/MachineLearning/orbweaver")
#get python environment
source("MegaDetectorFunctions.R")
mdresflat<-flattenBoxesMDSimple(mdres)
#classify a single image to make sure everything works before continuing
mdres<-classifyImageMD(mdsession,images$FilePath[7773])
y
images$FilePath<-gsub("////10.24.17.135/Projects//","/mnt/projects/",images$FilePath,fixed=T)
images$FilePath<-gsub("/mnt/projects/","////10.24.17.135/Projects//",images$FilePath,fixed=T)
#classify a single image to make sure everything works before continuing
mdres<-classifyImageMD(mdsession,images$FilePath[10017])
# load point
images<-read.csv(file=paste0(datadir,imagefile),stringsAsFactors = F)
images$FilePath<-gsub("/mnt/projects/","//10.24.17.135/Projects/",images$FilePath,fixed=T)
#classify a single image to make sure everything works before continuing
mdres<-classifyImageMD(mdsession,images$FilePath[10017])
py_install("pillow")
#classify a single image to make sure everything works before continuing
mdres<-classifyImageMD(mdsession,images$FilePath[10017])
install_tensorflow()
install_tensorflow()
library(reticulate)
install_tensorflow()
py_install("tensorflow")
library(exifr)
library(dplyr)
library(stringi)
library(jpeg)
library(imager)
library(data.table)
library(jsonlite)
setwd("//10.24.17.135/MachineLearning/orbweaver")
source("MegaDetectorFunctions.R")
datadir <- "\\\\10.24.17.135\\Projects\\Stacy-Dawes_Kenya\\Working Directory\\Data\\"
imagefile <- "Jan2020_Results.csv"
# load point
images<-read.csv(file=paste0(datadir,imagefile),stringsAsFactors = F)
images$FilePath<-gsub("/mnt/projects/","//10.24.17.135/Projects/",images$FilePath,fixed=T)
source_python("ImageCropGenerator.py")
#classify a single image to make sure everything works before continuing
mdres<-classifyImageMD(mdsession,images$FilePath[10017])
py_install(pillow)
py_install(PIL)
py_install(PILLOW)
library(devtools)
library(roxygen2)
install.packages(‘tensorflow’, ‘pbapply’, ‘jpeg’, ‘keras’, ‘reticulate’, ‘tfdatasets’, ‘exifr’, ‘av’, ‘data.table’, ‘magrittr’, ‘dplyr’, ‘imager’, ‘listarrays’)
install.packages("tensorflow", "pbapply", "jpeg", "keras", "reticulate", "tfdatasets", "exifr", "av", "data.table", "magrittr", "dplyr"", "imager", "listarrays")
install.packages("tensorflow")
install.packages("reticulate")
install.packages("png")
install.packages("reticulate")
install.packages("png")
install.packages("reticulate")
install.packages("listarrays")
install.packages("magrittr")
install.packages("devtools")
install.packages("usethis")
install.packages("curl")
install.packages("usethis")
install.packages("curl")
install.packages("libcurl")
install.packages("libcurl")
install.packages("curl")
install.packages("usethis")
install.packages("usethis")
install.packages("devtools")
install.packages("systemfonts")
install.packages("systemfonts")
install.packages("devtools")
install.packages("devtools")
install.packages("ragg")
install.packages("devtools")
install.packages("devtools")
install.packages("jpeg")
install.packages("imagr")
install.packages("imager")
install.packages("igraph")
install.packages("igraph")
install.packages("igraph")
install.packages("igraph")
install.packages("igraph")
install.packages("imager")
install.packages("imager")
install.packages("imager")
install.packages("dplyr")
install.packages("exifr")
install.packages("av")
install.packages("av")
install.packages("data.table")
install.packages("pbapply")
install.packages("tensorflow")
install.packages("tfdatasets")
install.packages("keras")
library(animl)
library(reticulate)
use_condaenv("mlgpu")
library(animl)
# Load the MegaDetector model
mdsession <- loadMDModel("/mnt/machinelearning/megaDetector/megadetector_v4.1.pb")
